datasource db {
  provider = "mongodb"
  url      = env("MONGO_URL")
}

generator client {
  provider        = "prisma-client-js"
}

model Account {
  id                 String   @id @default(auto()) @map("_id") @db.ObjectId
  userId             String   @map("user_id") @db.ObjectId
  type               String
  provider           String
  providerAccountId  String   @map("provider_account_id")
  refresh_token      String?  @db.String 
  access_token       String?  @db.String
  expires_in         Int?     
  token_type         String?
  scope              String?
  id_token           String?  @db.String
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id") @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  accounts      Account[]
  sessions      Session[]

  @@map("users")
}

model VerificationToken {
  id         String    @id @default(cuid()) @map("_id")
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

model ModChip {
  id         String    @id @default(cuid()) @map("_id")
  type       String    
  name       String
  shortname  String?
  description String?
  previewImageURL String?
  iconImageURL  String?
  discordDownloadLink String
  filePaths  String
  author     String    @default("{}")
  chipInformation String  @default("{}")
  uploadedAt  DateTime  @default(now())

  @@map("modchips")
}